{"version":3,"file":"static/js/movieDetails-page.3e7c95ab.chunk.js","mappings":"yOACA,GAAgB,IAAM,0BAA0B,UAAY,gCAAgC,SAAW,+BAA+B,KAAO,2BAA2B,QAAU,8BAA8B,SAAW,+BAA+B,KAAO,2BAA2B,OAAS,6BAA6B,KAAO,2BAA2B,IAAM,2B,mBC4F1W,EAjFqB,WACnB,OAA8BA,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBH,EAAAA,EAAAA,YAAxB,eAAOK,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WACRT,GAAW,GACXU,EAAAA,GAAoBT,GACjBU,MAAK,SAAAC,GACJR,EAAQQ,GACRZ,GAAW,MAEZa,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,SAClBZ,EAAS,gBAEZ,CAACJ,EAASI,IAKb,OACE,2BACGF,IACC,mBAAQe,UAAWC,EAAAA,IAAOC,QANjB,WAAO,IAAD,IACnBf,EAAQ,iBAACE,QAAD,IAACA,GAAD,UAACA,EAAUc,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,YAK9B,kBAIDvB,IAAW,SAACwB,EAAA,EAAD,IACXpB,IACC,iBAAKe,UAAWC,EAAAA,UAAhB,WACE,gBACED,UAAWC,EAAAA,IACXK,IAAG,UAAKd,EAAAA,IAAL,OAAwBA,EAAAA,IAAxB,OAAuCP,EAAKsB,aAC/CC,IAAG,UAAKvB,EAAKwB,mBAEf,iBAAKT,UAAWC,EAAAA,KAAhB,WACE,gBAAID,UAAWC,EAAAA,MAAf,UACGhB,EAAKwB,eADR,KAC0BxB,EAAKyB,aAAaC,MAAM,EAAG,GADrD,QAGA,gBAAIX,UAAWC,EAAAA,OAAf,qBAAkChB,EAAK2B,aAAaC,QAAQ,OAC5D,cAAGb,UAAWC,EAAAA,SAAd,SAA2BhB,EAAK6B,YAEhC,oCACA,gBAAKd,UAAWC,EAAAA,OAAhB,SACGhB,EAAK8B,OAAOC,KAAI,SAAAC,GAAC,OAChB,iBAAMjB,UAAWC,EAAAA,KAAjB,SACGgB,EAAEC,MADyBD,EAAEE,eAQzClC,IACC,gBAAIe,UAAWC,EAAAA,SAAf,WACE,SAAC,KAAD,CACED,UAAWC,EAAAA,KACXmB,GAAG,OACHjB,MAAO,CACLC,KAAK,GAAD,OAAKf,EAASc,MAAMC,KAAKiB,UAAzB,OAAoChC,EAASc,MAAMC,KAAKkB,SAJhE,mBASA,SAAC,KAAD,CACEtB,UAAWC,EAAAA,QACXmB,GAAG,UACHjB,MAAO,CACLC,KAAK,GAAD,OAAKf,EAASc,MAAMC,KAAKiB,UAAzB,OAAoChC,EAASc,MAAMC,KAAKkB,SAJhE,sBASA,SAAC,KAAD,CAAQC,QAAStC,Y,kOCrFrBuC,EAAM,mCACZC,IAAAA,SAAAA,QAAA,+BAEO,IAAMC,EAAY,6BAEZC,EAAQ,QAERC,EAAQ,QAIRC,EAAW,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,SACFL,IAAAA,IAAA,uCACWD,EADX,iBACuBM,IAFrB,uBACjBC,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,qDAOXC,EAAc,mCAAG,WAAOC,EAAOH,GAAd,yFACLL,IAAAA,IAAA,gCACID,EADJ,iCACgCS,EADhC,iBAC8CH,EAD9C,yBADK,uBACpBC,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,wDAMdG,EAAe,mCAAG,WAAMf,GAAN,yFACNM,IAAAA,IAAA,iBACXN,EADW,oBACGK,EADH,uDADM,uBACrBO,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"MovieDetails_img__uOAom\",\"container\":\"MovieDetails_container__Ys+c9\",\"linkList\":\"MovieDetails_linkList__767FF\",\"link\":\"MovieDetails_link__U+v+7\",\"reviews\":\"MovieDetails_reviews__XEGy1\",\"overview\":\"MovieDetails_overview__U5Vnb\",\"info\":\"MovieDetails_info__qv2SI\",\"genres\":\"MovieDetails_genres__Pnmgt\",\"span\":\"MovieDetails_span__iI7yM\",\"btn\":\"MovieDetails_btn__7L5IF\"};","import { useEffect, useState } from 'react';\nimport {\n  Outlet,\n  useParams,\n  Link,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport * as Api from 'services';\nimport s from './MovieDetails.module.css';\nimport { Loading } from '../../components/Loading/Loading';\n\nconst MovieDetails = () => {\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const [film, setFilm] = useState();\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    setLoading(true);\n    Api.getMovieDetails(movieId)\n      .then(r => {\n        setFilm(r);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.log(error.message);\n        navigate(`/movies`);\n      });\n  }, [movieId, navigate]);\n\n  const onBack = () => {\n    navigate(location?.state?.from ?? '/movies');\n  };\n  return (\n    <div>\n      {film && (\n        <button className={s.btn} onClick={onBack}>\n          Back\n        </button>\n      )}\n      {loading && <Loading />}\n      {film && (\n        <div className={s.container}>\n          <img\n            className={s.img}\n            src={`${Api.IMG_BASE_URL}${Api.IMG_W400}${film.poster_path}`}\n            alt={`${film.original_title}`}\n          />\n          <div className={s.info}>\n            <h1 className={s.title}>\n              {film.original_title} ({film.release_date.slice(0, 4)})\n            </h1>\n            <h2 className={s.rating}>Rating: {film.vote_average.toFixed(2)}</h2>\n            <p className={s.overview}>{film.overview}</p>\n\n            <h4>Genres</h4>\n            <div className={s.genres}>\n              {film.genres.map(g => (\n                <span className={s.span} key={g.id}>\n                  {g.name}\n                </span>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n      {film && (\n        <ul className={s.linkList}>\n          <Link\n            className={s.link}\n            to=\"cast\"\n            state={{\n              from: `${location.state.from.pathname}${location.state.from.search}`,\n            }}\n          >\n            Cast\n          </Link>\n          <Link\n            className={s.reviews}\n            to=\"reviews\"\n            state={{\n              from: `${location.state.from.pathname}${location.state.from.search}`,\n            }}\n          >\n            Reviews\n          </Link>\n          <Outlet context={film} />\n        </ul>\n      )}\n    </div>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst KEY = '119d79b053f922516c6af4b71b0fd3ac';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const IMG_BASE_URL = `https://image.tmdb.org/t/p`;\nexport const IMG_W500 = `/w500`;\nexport const IMG_W400 = `/w400`;\nexport const IMG_W300 = `/w300`;\nexport const IMG_W200 = `/w200`;\nexport const IMG_W100 = `/w100`;\nexport const IMG_ORIG = `/original`;\n\nexport const getTrending = async (page = 1) => {\n  const { data } = await axios.get(\n    `/trending/movie/week?api_key=${KEY}&page=${page}`\n  );\n  return data;\n};\n\nexport const getSearchMovie = async (query, page) => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`\n  );\n  return data;\n};\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${KEY}&language=en-US&append_to_response=credits,reviews`\n  );\n  return data;\n};\n\nexport const getMovieCredits = async () => {\n  const { data } = await axios.get('/movies/get-movie-credits');\n  return data;\n};\n\nexport const getMovieReviews = async () => {\n  const { data } = await axios.get('/movies/get-movie-reviews');\n  return data;\n};\n"],"names":["useState","loading","setLoading","movieId","useParams","film","setFilm","navigate","useNavigate","location","useLocation","useEffect","Api","then","r","catch","error","console","log","message","className","s","onClick","state","from","Loading","src","poster_path","alt","original_title","release_date","slice","vote_average","toFixed","overview","genres","map","g","name","id","to","pathname","search","context","KEY","axios","IMG_BASE_URL","IMG_W400","IMG_W200","getTrending","page","data","getSearchMovie","query","getMovieDetails"],"sourceRoot":""}