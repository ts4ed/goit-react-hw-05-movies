{"version":3,"file":"static/js/movies-page.96eac00f.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Loading/Loading.module.css?25ee","components/Loading/Loading.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchMovies/SearchMovies.module.css?b223","webpack://goit-react-hw-05-movies/./src/components/Pagination/Pagination.module.css?4da5","components/Pagination/Pagination.jsx","components/SearchMovies/SearchMovies.jsx","components/Movies/Movies.jsx","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"div\":\"Loading_div__QDQrh\"};","import { ThreeDots } from 'react-loader-spinner';\nimport s from './Loading.module.css';\nexport const Loading = () => {\n  return (\n    <div className={s.div}>\n      <ThreeDots color=\"#808080\" height={80} width={80} />;\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"SearchMovies_list__S8euj\",\"item\":\"SearchMovies_item__oZwux\",\"title\":\"SearchMovies_title__9ws98\",\"img\":\"SearchMovies_img__K1wu0\",\"form\":\"SearchMovies_form__Aa9iv\"};","// extracted by mini-css-extract-plugin\nexport default {\"btn1\":\"Pagination_btn1__M2Oai\",\"container\":\"Pagination_container__DgzGU\"};","import s from './Pagination.module.css';\n\nexport const Pagination = ({ page, totalPage, changePage }) => {\n  const onClick = e => {\n    const { name } = e.currentTarget;\n    name === 'forward' && page !== totalPage && changePage(page + 1);\n    name === 'back' && page !== 1 && changePage(page - 1);\n  };\n  return (\n    <div className={s.container}>\n      <button className={s.btn1} onClick={onClick} name=\"back\">\n        past page\n      </button>\n      {/* <Integer>{page}</Integer> */}\n      <button className={s.btn} onClick={onClick} name=\"forward\">\n        next page\n      </button>\n    </div>\n  );\n};\n","import { getSearchMovie } from 'services';\nimport { useState, useEffect } from 'react';\nimport { useLocation, useNavigate, Link } from 'react-router-dom';\nimport s from './SearchMovies.module.css';\nimport { Pagination } from 'components/Pagination/Pagination';\nimport { Loading } from '../Loading/Loading';\nimport * as Api from 'services';\nimport styled from 'styled-components';\nconst StyledLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n`;\n\nexport const SearchMovies = () => {\n  let location = useLocation();\n  let params = new URLSearchParams(location.search);\n  const [movies, setMovies] = useState('');\n  const [input, setInput] = useState('');\n  const [totalPage, setTotalPage] = useState('');\n  const navigate = useNavigate();\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(params.get('page') ?? 1);\n  query === '' && params.get('query') !== null && setQuery(params.get('query'));\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const { value } = e.target.elements.movie;\n    if (input === '' && alert('Введите запрос')) {\n      return;\n    }\n    if (value !== query) {\n      setPage(1);\n\n      setQuery(value);\n      location = {\n        pathname: `/movies`,\n        search: `?query=${value}&page=1`,\n      };\n      navigate(location.search);\n\n      setInput('');\n\n      // console.log(page);\n      setInput('');\n    }\n  };\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    async function fetchMovie() {\n      try {\n        setLoading(true);\n\n        getSearchMovie(query, page).then(r => {\n          r.results.length === 0 && alert('По вашему запросу ничего нет');\n          setMovies(r.results);\n          setTotalPage(r.total_pages);\n          setPage(r.page);\n          setLoading(false);\n        });\n      } catch (error) {\n        if (error) {\n          navigate(`/home`);\n        }\n      }\n    }\n    fetchMovie();\n  }, [query, navigate, page]);\n\n  const hendleSetPage = data => {\n    setPage(data);\n    location = {\n      search: `?query=${input}&page=${data}`,\n    };\n    navigate(location.search);\n  };\n  return (\n    <div>\n      <form className={s.form} onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          name=\"movie\"\n          value={input}\n          onChange={e => setInput(e.target.value)}\n          // placeholder={query}\n        />\n        <button type=\"submit\">Search Movie</button>\n      </form>\n      {loading && <Loading />}\n\n      <ul className={s.list}>\n        {movies &&\n          movies.map(r => (\n            <li className={s.item} key={r.id}>\n              <StyledLink to={`/movies/${r.id}`} state={{ from: location }}>\n                <img\n                  className={s.img}\n                  src={`${Api.IMG_BASE_URL}${Api.IMG_W400}${r.poster_path}`}\n                  alt={r.title}\n                />\n\n                <h2 className={s.title}>{r.original_title}</h2>\n              </StyledLink>\n            </li>\n          ))}\n      </ul>\n      {movies.length !== 0 && (\n        <Pagination\n          changePage={hendleSetPage}\n          page={page}\n          totalPage={totalPage}\n        />\n      )}\n    </div>\n  );\n};\n","import { SearchMovies } from 'components/SearchMovies/SearchMovies';\nimport { useLocation, Outlet } from 'react-router-dom';\nexport const Movies = () => {\n  const location = useLocation();\n  return (\n    <div>\n      {location.pathname === '/movies' && <SearchMovies />}\n      <Outlet />\n    </div>\n  );\n};\n","import axios from 'axios';\n\nconst KEY = '119d79b053f922516c6af4b71b0fd3ac';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const IMG_BASE_URL = `https://image.tmdb.org/t/p`;\nexport const IMG_W500 = `/w500`;\nexport const IMG_W400 = `/w400`;\nexport const IMG_W300 = `/w300`;\nexport const IMG_W200 = `/w200`;\nexport const IMG_W100 = `/w100`;\nexport const IMG_ORIG = `/original`;\n\nexport const getTrending = async (page = 1) => {\n  const { data } = await axios.get(\n    `/trending/movie/week?api_key=${KEY}&page=${page}`\n  );\n  return data;\n};\n\nexport const getSearchMovie = async (query, page) => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`\n  );\n  return data;\n};\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${KEY}&language=en-US&append_to_response=credits,reviews`\n  );\n  return data;\n};\n\nexport const getMovieCredits = async () => {\n  const { data } = await axios.get('/movies/get-movie-credits');\n  return data;\n};\n\nexport const getMovieReviews = async () => {\n  const { data } = await axios.get('/movies/get-movie-reviews');\n  return data;\n};\n"],"names":["Loading","className","s","color","height","width","Pagination","page","totalPage","changePage","onClick","e","name","currentTarget","StyledLink","styled","Link","SearchMovies","location","useLocation","params","URLSearchParams","search","useState","movies","setMovies","input","setInput","setTotalPage","navigate","useNavigate","query","setQuery","loading","setLoading","get","setPage","useEffect","getSearchMovie","then","r","results","length","alert","total_pages","error","fetchMovie","onSubmit","preventDefault","value","target","elements","movie","pathname","type","onChange","map","to","id","state","from","src","Api","poster_path","alt","title","original_title","data","Movies","KEY","axios","IMG_BASE_URL","IMG_W400","IMG_W200","getTrending","getMovieDetails"],"sourceRoot":""}